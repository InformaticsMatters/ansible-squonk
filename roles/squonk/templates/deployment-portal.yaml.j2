---
kind: Deployment
apiVersion: v1
metadata:
  name: portal
  namespace: {{ sq_namespace }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: portal
  template:
    metadata:
      name: portal
      labels:
        name: portal
    spec:
      serviceAccountName: squonk

      # A 'preferred' (not guaranteed)
      # node selection affinity...
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: purpose
                operator: In
                values:
                - {{ sq_node_purpose }}

      initContainers:
      - name: wait-for-core-before-portal
        image: yauritux/busybox-curl
        terminationMessagePolicy: FallbackToLogsOnError
        command:
        - 'sh'
        - '-c'
        - 'until (( curl http://coreservices.{{ sq_namespace }}.svc:8080/rest/ping --connect-timeout 5 )); do sleep 2; done'

      containers:
      - image: {{ sq_portal_registry }}/squonk/portal:{{ sq_portal_image_tag }}
        name: portal
{% if sq_portal_image_tag == 'latest' %}
        imagePullPolicy: Always
{% else %}
        imagePullPolicy: IfNotPresent
{% endif %}
        terminationMessagePolicy: FallbackToLogsOnError
        env:
        - name: POSTGRES_HOSTNAME
          value: database.{{ sq_infra_namespace }}.svc
        - name: POSTGRES_SQUONK_DATABASE
          valueFrom:
            secretKeyRef:
              name: database-secrets-{{ sq_infra_database }}
              key: database_name
        - name: POSTGRES_SQUONK_USER
          valueFrom:
            secretKeyRef:
              name: database-secrets-{{ sq_infra_database }}
              key: database_user
        - name: POSTGRES_SQUONK_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secrets-{{ sq_infra_database }}
              key: database_user_password
        - name: SERVICE_CALLBACK
          value: http://localhost:8080/portal
        - name: LOGOUT_REDIRECT_TO
          value: '{{ sq_portal_logout_redirect_to_fact }}/'
        - name: JAVA_TOOL_OPTIONS
          value: "{{ sq_portal_java_tool_options }}"
        ports:
        - name: http
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /portal
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /portal
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 5
        resources:
          limits:
{% if sq_portal_cpu_limit %}
            cpu: {{ sq_portal_cpu_limit }}
{% endif %}
{% if sq_portal_mem_limit %}
            memory: {{ sq_portal_mem_limit }}
{% endif %}
          requests:
            cpu: {{ sq_portal_cpu_request }}
            memory: {{ sq_portal_mem_request }}
        volumeMounts:
        - mountPath: /usr/local/tomcat/conf/context.xml
          name: portal-sso-config
          subPath: context.xml
          readOnly: true
        - mountPath: /usr/local/tomcat/webapps/portal/WEB-INF/keycloak.json
          name: portal-sso-config
          subPath: keycloak.json
          readOnly: true

      volumes:
      - name: portal-sso-config
        configMap:
          name: portal-sso-config
