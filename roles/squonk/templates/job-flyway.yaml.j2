---
kind: Job
apiVersion: batch/v1
metadata:
  name: postgres-migrate
  namespace: {{ sq_namespace }}
spec:
  selector:
    name: postgres-migrate
  template:
    metadata:
      labels:
        name: postgres-migrate
    spec:
      serviceAccountName: squonk

      # A 'preferred' (not guaranteed)
      # node selection affinity...
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: purpose
                operator: In
                values:
                - {{ sq_node_purpose }}

      containers:
      - name: postgres-migrate
        image: {{ sq_flyway_image }}:{{ sq_image_tag }}
{% if sq_image_tag == 'latest' %}
        imagePullPolicy: Always
{% else %}
        imagePullPolicy: IfNotPresent
{% endif %}
        env:
        - name: POSTGRES_HOSTNAME
          value: database.{{ sq_infra_namespace }}.svc
        - name: POSTGRES_DATABASE
          valueFrom:
            secretKeyRef:
              name: database-secrets-{{ sq_infra_database }}
              key: database_name
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: database-secrets-{{ sq_infra_database }}
              key: database_user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secrets-{{ sq_infra_database }}
              key: database_user_password
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 32Mi

      restartPolicy: Never
