---

# Sets a number of facts: -
#
# - sq_keycloak_realm_manager_fact
# - sq_keycloak_realm_manager_password_fact

# Note: This logic relies on a Realm that's been created using the
#       "ansible-infrastructure -> infrastructure-realm" Role,
#       which creates a secret containing Realm manager credentials
#       in the infrastructure namespace.

- name: Assert variables
  assert:
    that:
    - sq_infra_namespace|length > 0
    - sq_keycloak_realm|length > 0

# The infrastructure namespace must exist.

- name: Get infrastructure namespace ({{ sq_infra_namespace }})
  k8s_info:
    kind: Namespace
    name: "{{ sq_infra_namespace }}"
  register: n_result

- name: Assert infrastructure namespace exists
  assert:
    that:
    - n_result.resources|length == 1

# The Realm manager secrets must exist...

- name: Get Keycloak realm manager secrets
  k8s_info:
    kind: Secret
    name: manager-{{ sq_keycloak_realm }}
    namespace: "{{ sq_infra_namespace }}"
  register: krm_s_result

- name: Assert Keycloak realm manager secrets exist
  assert:
    that:
    - krm_s_result.resources|length == 1

# Set the facts the user expects...

- name: Set Keycloak realm manager facts
  set_fact:
    sq_keycloak_realm_manager_fact: "{{ krm_s_result.resources[0].data.username|b64decode }}"
    sq_keycloak_realm_manager_password_fact: "{{ krm_s_result.resources[0].data.password|b64decode }}"
