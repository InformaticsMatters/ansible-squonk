---

# Some sanity-checks...

- name: Assert hostname is set
  assert:
    that:
    - sq_hostname|string|length > 0
    - sq_cert_issuer in cert_issuers

- name: Get {{ sq_workdir_volume_storageclass }} StorageClass
  k8s_info:
    kind: StorageClass
    name: "{{ sq_workdir_volume_storageclass }}"
  register: sc_result
  when: sq_workdir_volume_storageclass != " "

- name: Assert {{ sq_workdir_volume_storageclass }} StorageClass
  assert:
    that: sc_result.resources|length == 1
    fail_msg: The {{ sq_workdir_volume_storageclass }} StorageClass must be available on the cluster
  when: sq_workdir_volume_storageclass != " "

# Go...

- name: Set sq_portal_logout_redirect_to fact
  set_fact:
    sq_portal_logout_redirect_to_fact: https://{{ sq_hostname }}/portal

- name: Creating namespace '{{ sq_namespace }}'
  k8s:
    definition: "{{ lookup('template', '{{ item }}.yaml.j2') }}"
    wait: yes
  loop:
  - namespace
  - serviceaccount
  - role-squonk-psp-unrestricted
  - role-squonk-runner
  - rolebinding-squonk-psp-unrestricted-sa
  - rolebinding-squonk-runner-sa

- name: Relax {{ sq_namespace }} 'default' service account (for cert-manager)
  k8s:
    definition: "{{ lookup('template', 'rolebinding-default-sa.yaml.j2') }}"
    wait: yes

- import_tasks: configure-infra.yaml

- import_tasks: deploy-rabbitmq.yaml
- import_tasks: deploy-squonk.yaml

# Display some useful information for the user...

- name: Display portal location
  debug:
    msg: >-
      Use https://{{ sq_portal_hostname }}/portal
      for the Squonk Portal
