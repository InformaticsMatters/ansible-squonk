---

# A play to update a previously deployed website.
# Here we simply re-apply the deployment.
# It has a label that changes each time we use it,
# forcing the Pod to bounce and pull the latest image.

- include_tasks: prep.yaml

# A kubernetes (or OpenShift) host and an API key must be set.
# We will either have authenticated against an OpenShift server
# or the AWX kubernetes credentials will have injected suitable
# values for the K8S_AUTH_HOST and K8S_AUTH_API_KEY environment variables.
# Either way the ansible variables 'k8s_auth_host' and
# 'k8s_auth_api_key' will have been set.
- name: Assert authentication
  assert:
    that:
    - k8s_auth_host|length > 0
    - k8s_auth_api_key|length > 0

- name: Update website
  block:

  - name: Assert hostname
    assert:
      that: sq_hostname|string|length > 0

  - name: Check namespace
    k8s_info:
      kind: Namespace
      api_version: v1
      name: "{{ sq_namespace }}"
    register: n_result

  - name: Assert namespace exists
    assert:
      that: n_result.resources|length == 1

  - name: Re-deploy website
    k8s:
      definition: "{{ lookup('template', 'deployment-website.yaml.j2') }}"
      wait: yes
      wait_timeout: "{{ wait_timeout }}"

  module_defaults:
    group/k8s:
      host: "{{ k8s_auth_host }}"
      api_key: "{{ k8s_auth_api_key }}"
