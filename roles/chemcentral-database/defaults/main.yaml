---

# Deploy (or un-deploy)?
# One of 'present' or 'absent'.
ccd_state: present

# Size and class of the database directory.
# The class is 'blank', which implies the default,
# which the user would typically define.
ccd_database_volume_size_g: 250
ccd_database_volume_storageclass: " "

# Loader variables ------------------------------------------------------------

# The bucket and path for the (RAW) vendor data.
# The ccd_s3_endpoint is set if not using AWS.
# It's the endpoint of the non-AWS S3 service.
ccd_s3_endpoint: ''
ccd_bucket: im-fragnet
ccd_bucket_path: SetMe

# Size and class of the database loader directory.
# The class is 'blank', which implies the default,
# which the user would typically define.
ccd_database_loader_volume_size_g: 5
ccd_database_loader_volume_storageclass: " "

# The Classname of the loader to use.
# One available in the container image,
# for example 'org.squonk.rdkit.db.loaders.EMoleculesBBSmilesLoader'
ccd_loader_class: SetMe
# A marker to use with the loader.
# It's a unique identity of the loader.
# Loaders with different 'markers' can run at the same time.
ccd_loader_marker: A
# The data file to load (for single-file loaders).
# Relative to the mount-point in the container.
# Something like 'version.smi.gz'
ccd_loader_file: SetMe
# The directory of the data to load (for multi-file loaders).
# Relative to the mount-point in the container
ccd_loader_path: SetMe
# The file pattern of the data to load (for multi-file loaders)
ccd_loader_pattern: SetMe
# The number of records to load
# 0 implies all.
ccd_loader_limit: 0
# How often to report progress
ccd_loader_reporting_chunk: 0
# Name of the database table to load into
# Class loader implement a default, so this is not normally required.
ccd_loader_table_name: ''

# A pull-secret for public images pulled from DockerHub.
# If set this is the base-64 string that can be used as the value
# in our Kubernetes Secret as the .dockerconfigjson value.
# If set it is applied to the ServiceAccount in the namespace
# and applied to Pods that use that namespace.
ccd_dockerhub_pullsecret: ''

#------------------------------------------------------------------------------

# Picked up from the environment
# (typically injected by AWX/Tower)...

aws_access_key_id: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
aws_secret_access_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
aws_default_region: eu-central-1
